setwd("~/KBB/Data")
setwd("C:/Users/lledesma.TIMES/Documents/KBB/Data")
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB"
# Load in package
library(tidyverse)
library(robotoolbox)
library(openxlsx)
library(readxl)
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data"
# Set working directory
setwd(WorkingDirectory)
# API Token
token <- "947975196832610fca8a1673d54f0530c7cb8275"
# Setting up KoBo
kobo_setup(url = "https://kf.kobotoolbox.org",
token = token)
# Kobo Settings (Quality Control)
kobo_settings()
# Viewing the data
all.data.l <- kobo_asset_list()
df.uid <- data.frame(
ASEBA_YSR.iud = "a6qiRpZCN5Y79dPAXMtb4A",
Atlantis.iud = "aSp3rJjnNFGrEN9TvTJE9Z",
BRIEF2_SF.iud = "aTBTDSaspJjMyx8sWRDzbc",
PatternReas.iud = "aSCbRS4rUwDPLaAGvaHztc",
Triangles_LettrDig.iud = "aKBKpKnKssVquL3yxWqx8G",
ZAT.iud = "aSoQexoZ8NAeBqTAm9sqQt",
ASEBA_CBC.iud = "aKuaJqgcuCv5GAbmXdAbt6",
BRIEF2_Parent.iud = "a8crqFHGueNo9WDa6D8kPa",
HomeEnv.iud = "aMsdG3VCzxGbCutgMtkLjq",
PSC.iud = "a4t7cAdJvHnmagPQArZ9yX",
PSQ.iud = "aGdRnPPQeFAV64ha5fxxpP",
VinelandII.iud = "aHP8oarPVKEfGAA3L87QRH",
CFM2_4.iud = "aGvHGCmV9HF9yzsQqCjuJN",
CFM5_17.iud = "a3xZkViikGeNqbuZC7hAzb"
)
# Transpose and rename df.iud
df.uid.t <- data.frame(t(df.uid))
names(df.uid.t) <- "uid"
# Add Child  Parent Assessment Label
df.uid.t$label <- c(rep("Children", 6), rep("Adults", 6), rep("Screener",2))
# Add Partial Pathway
df.uid.t <- df.uid.t %>%
mutate(raw.pathway = case_when(
label == "Children" ~"2_behavioral_assessments/Children/Raw",
label == "Adults" ~ "2_behavioral_assessments/Adults/Raw",
label == "Screener" ~ "1_screener/Raw"
))
# Import all data into a list
all.data.list <- list()
for(ii in 1:nrow(df.uid.t)) {
# Import the data
all.data.list[[ii]] <- kobo_submissions(df.uid.t$uid[ii])
# Name the list elements
names(all.data.list)[ii] <- gsub(".iud" ,"", row.names(df.uid.t)[ii])
# Check progress
print(paste("Importing ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
ii = 1
save.pathway = paste(Root.Folder,"/",
df.uid.t$raw.pathway[ii], "/",
names(all.data.list),"_Raw.xlsx", sep="")[ii]
df.uid.t$raw.pathway[ii]
df.uid.t
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set working directory
setwd(WorkingDirectory)
# Transpose and rename df.iud
df.uid.t <- data.frame(t(df.uid))
names(df.uid.t) <- "uid"
# Add Child  Parent Assessment Label
df.uid.t$label <- c(rep("Children", 6), rep("Adults", 6), rep("Screener",2))
# Add Partial Pathway
df.uid.t <- df.uid.t %>%
mutate(raw.pathway = case_when(
label == "Children" ~"RAW_DATA/Behavioral/Children/",
label == "Adults" ~ "RAW_DATA/Behavioral/Adults/",
label == "Screener" ~ "RAW_DATA/Screener/"
))
# Import all data into a list
all.data.list <- list()
for(ii in 1:nrow(df.uid.t)) {
# Import the data
all.data.list[[ii]] <- kobo_submissions(df.uid.t$uid[ii])
# Name the list elements
names(all.data.list)[ii] <- gsub(".iud" ,"", row.names(df.uid.t)[ii])
# Check progress
print(paste("Importing ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
DataLocation
paste(DataLocation,"/",
df.uid.t$raw.pathway[ii], "/",
names(all.data.list),"_Raw.xlsx", sep="")[ii]
DataLocation
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
paste(DataLocation,"/",
df.uid.t$raw.pathway[ii], "/",
names(all.data.list),"_Raw.xlsx", sep="")[ii]
paste(DataLocation,
df.uid.t$raw.pathway[ii],
names(all.data.list),"_Raw.xlsx", sep="")[ii]
# Saving the raw data in their respective raw_data folder
for(ii in 1:length(all.data.list)) {
# Create The Save Pathway
save.pathway = paste(DataLocation,
df.uid.t$raw.pathway[ii],
names(all.data.list),"_Raw.xlsx", sep="")[ii]
# Select the data to save
data <- all.data.list[[ii]]
# Save each data in its raw form
write.xlsx(x= data, file = save.pathway)
# Check progress
print(paste("Saving ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
# Wait 2 seconds
Sys.sleep(2)
getwd()
# Score the data
source("Scoring/PatternReasoning.Scoring.R")
# Read in the file
PatternReasoning <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Children/PatternReas_Raw.xlsx"))
# Check the IDs for errors
source("Scoring/IDError_FUNCTION.R")
getwd()
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
# Set working directory
setwd(WorkingDirectory)
# Read in the file
PatternReasoning <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Children/PatternReas_Raw.xlsx"))
# Check the IDs for errors
source("Scoring/IDError_FUNCTION.R")
getwd()
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
# Set working directory
setwd(WorkingDirectory)
# Check the IDs for errors
source("Scoring/IDError_FUNCTION.R")
# Set working directory
setwd(WorkingDirectory)
DataLocation
# Load the final ID tracker
Final_ID_Tracker <- read_excel(paste0(DataLocation, "FINAL_DS/Screener/FINAL_ID_Tracker.xlsx"))
# Load the final ID tracker
Final_ID_Tracker <- read_excel(paste0(DataLocation, "FINAL_DS/Screener/FINAL_ID_Tracker.xlsx"))
check_id_errors <- function(dataset.name, x) {
# Name of the dataset
dataset <- dataset.name
# Reference variable
reference <- Final_ID_Tracker$ID
# Total IDs present
ID.num.M1 <- paste(dataset, ": There are data from ",length(unique(x[!is.na(x)]))," unique IDs",sep="")
# Data that still needs collecting
needs.data <- setdiff(reference, x)
needs.data <- needs.data[!is.na(needs.data)]
if(length(needs.data) > 0) {
needs.data.M2 <- paste(dataset, ": ", length(needs.data), " IDs needs their data collected", sep="")
} else {
needs.data.M2 <- paste(dataset, ": Only correct IDs are present", sep="")
}
# Identify the IDs that are duplicate
x.frequency <- table(x)
# Identify duplicates
duplicates <- x.frequency[x.frequency >1]
# How many times is the duplicate present
duplicate <-  names(duplicates)
duplicate.frequency <- unname(duplicates)
# Create a new variable with this info
if(length(duplicate.frequency) > 0) {
duplicate.M3 <- paste(dataset, ": ID ",duplicate, " is present ",duplicate.frequency," times", sep="")
} else {
duplicate.M3 <- paste(dataset, ": has no duplicate IDs", sep="")
}
# Get the IDs that are not supposed to be here
difference <- setdiff(x,reference)
difference <- difference[!is.na(difference)]
if(length(difference) > 0) {
badId.M4 <- paste(dataset, ": ", "ID ",difference, " is not a real ID", sep="")
} else {
badId.M4 <- paste(dataset, ": Only correct IDs are present", sep="")
}
# Obtain the number of NA's
NA.sum <- sum(is.na(x))
if(NA.sum > 0) {
Nas.M5 <- paste(dataset, ": ", "There are ",sum(is.na(x))," NAs for IDs", sep ="")
} else{
Nas.M5 <- paste(dataset, ": There are no missing IDs")
}
# Create a dataset called notes
notes <- data.frame(notes = c(ID.num.M1,
needs.data.M2,
duplicate.M3,
badId.M4,
Nas.M5))
# Return notes
notes
}
# Load in Packages
library(tidyverse)
library(readxl)
library(openxlsx)
library(stringr) # str_count()
# Read in the file
PatternReasoning <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Children/PatternReas_Raw.xlsx"))
# Check the IDs for errors
source("Scoring/IDError_FUNCTION.R")
PR_Notes <-check_id_errors("Pattern Reasoning",
PatternReasoning$Child_ID)
# Select Vars of Interest
Front <- PatternReasoning %>%
select(Child_ID,
Evaluator_ID,
Date_of_Evaluation)
Items <- PatternReasoning %>%
select(paste("Iterm_",1:11,sep=""),
"Item_12",
paste("Iterm_",13:36,sep=""))
# Cbind these selected Vars to make a new dataset
PatternReasoning2 <- cbind(Front, Items)
# Count the number of 777 (CDK), 888 (NRG), NAs, items given, and total number of items
PatternReasoning2$CDK <- rowSums(mutate(Items,across(everything(), ~ str_count(., "777"))), na.rm = T)
PatternReasoning2$NRG <- rowSums(mutate(Items,across(everything(), ~ str_count(., "888"))), na.rm = T)
PatternReasoning2$NA.Num <- rowSums(is.na(Items))
PatternReasoning2$Items.Given <- rowSums(!(is.na(Items)))
PatternReasoning2$Total.Items <- length(Items)
# Change all rows so if not 1 or 2 they will turn into 0s
Items.Cleaned <- data.frame(apply(Items, 1, function(row) ifelse(row %in% c(1, 2), row, 0)))
# Convert the outputs to numeric from character
Items.Cleaned.num <- data.frame(do.call(rbind, lapply(Items.Cleaned, function(x) as.numeric(x))))
# Take the row sums of Items Cleaned to calculate performance
PatternReasoning2$Performance <- rowSums(Items.Cleaned.num)
# Change The names of the variables so we know it is pattern reasoning
names(PatternReasoning2) <- c(names(PatternReasoning2)[1:3], paste("PR_",names(PatternReasoning2)[4:45], sep=""))
# Create a save pathway
save.pathway <- paste(Root.Folder,"/",
"2_behavioral_assessments/Children/Processed", "/",
"PatternReas_Processed.xlsx", sep="")
DataLocation
# Create a save pathway
save.pathway <- paste(DataLocation,"MODIFIED_DS/Behavioral/Children",
"PatternReas_Processed.xlsx", sep="")
# Save the scored data
write.xlsx(x= PatternReasoning2, file = save.pathway)
# This is the main script for importing (most of) and scoring behavioral data saved in KoboToolBox
# Load in package
library(tidyverse)
library(robotoolbox)
library(openxlsx)
library(readxl)
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
#########################                          ############################
######################                                 ########################
###################### REST OF THE SCRIPT IS AUTOMATIC ########################
######################                                 ########################
##########################                        #############################
# Set working directory
setwd(WorkingDirectory)
# API Token
token <- "947975196832610fca8a1673d54f0530c7cb8275"
# Setting up KoBo
kobo_setup(url = "https://kf.kobotoolbox.org",
token = token)
# Kobo Settings (Quality Control)
kobo_settings()
# Viewing the data
all.data.l <- kobo_asset_list()
# Write the uids for all needed data
df.uid <- data.frame(
ASEBA_YSR.iud = "a6qiRpZCN5Y79dPAXMtb4A",
Atlantis.iud = "aSp3rJjnNFGrEN9TvTJE9Z",
BRIEF2_SF.iud = "aTBTDSaspJjMyx8sWRDzbc",
PatternReas.iud = "aSCbRS4rUwDPLaAGvaHztc",
Triangles_LettrDig.iud = "aKBKpKnKssVquL3yxWqx8G",
ZAT.iud = "aSoQexoZ8NAeBqTAm9sqQt",
ASEBA_CBC.iud = "aKuaJqgcuCv5GAbmXdAbt6",
BRIEF2_Parent.iud = "a8crqFHGueNo9WDa6D8kPa",
HomeEnv.iud = "aMsdG3VCzxGbCutgMtkLjq",
PSC.iud = "a4t7cAdJvHnmagPQArZ9yX",
PSQ.iud = "aGdRnPPQeFAV64ha5fxxpP",
VinelandII.iud = "aHP8oarPVKEfGAA3L87QRH",
CFM2_4.iud = "aGvHGCmV9HF9yzsQqCjuJN",
CFM5_17.iud = "a3xZkViikGeNqbuZC7hAzb"
)
# Transpose and rename df.iud
df.uid.t <- data.frame(t(df.uid))
names(df.uid.t) <- "uid"
# Add Child  Parent Assessment Label
df.uid.t$label <- c(rep("Children", 6), rep("Adults", 6), rep("Screener",2))
# Add Partial Pathway
df.uid.t <- df.uid.t %>%
mutate(raw.pathway = case_when(
label == "Children" ~"RAW_DATA/Behavioral/Children/",
label == "Adults" ~ "RAW_DATA/Behavioral/Adults/",
label == "Screener" ~ "RAW_DATA/Screener/"
))
# Import all data into a list
all.data.list <- list()
for(ii in 1:nrow(df.uid.t)) {
# Import the data
all.data.list[[ii]] <- kobo_submissions(df.uid.t$uid[ii])
# Name the list elements
names(all.data.list)[ii] <- gsub(".iud" ,"", row.names(df.uid.t)[ii])
# Check progress
print(paste("Importing ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
# Saving the raw data in their respective raw_data folder
for(ii in 1:length(all.data.list)) {
# Create The Save Pathway
save.pathway = paste(DataLocation,
df.uid.t$raw.pathway[ii],
names(all.data.list),"_Raw.xlsx", sep="")[ii]
# Select the data to save
data <- all.data.list[[ii]]
# Save each data in its raw form
write.xlsx(x= data, file = save.pathway)
# Check progress
print(paste("Saving ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
library(readxl)
LettrDig <- read_excel("~/KBB/Data/2_behavioral_assessments/Children/Processed/LettrDig.xlsx")
View(LettrDig)
library(psych)
nrow(LettrDig)
LettrDig$DD <- c(rep("DD",200), rep("No",207))
LettrDig$DD
describe.by(LettrDig$LetDig_Performance, LettrDig$DD)
describeBy(LettrDig$LetDig_Performance, LettrDig$DD)
