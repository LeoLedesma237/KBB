# Create a list that will be used to score the columns of the dataset
scoring_list <- list(emotionally_reactive = emo_reac,
anxious_depressed = anx_depr,
somatic_complaints = som_comp,
withdrawn = withdr,
sleep_problems = sleep_prob,
attention_problems = atten_prob,
aggressive_behaviors = aggr_beh,
other_problems = othr_prob,
depressive_problems = depress_scale,
anxiety_problems = anxiet_scale,
autism_spectrum_problems = autism_scale,
attention_deficit_hyperactivity_problems = ADHD_scale,
opositional_defiant_problems = opp_def_prob_scale)
###
###### Scoring the data
###
scored_list <- list()
for(ii in 1:length(scoring_list)) {
# Save the current scored list as a vector
scored_list[[ii]] <- rowSums(Items_Raw2[,scoring_list[[ii]]], na.rm = T) # Only applies to Q100
}
# Cbind them into a dataset
scored_df <- data.frame(do.call(cbind, scored_list))
# Add Internal and Extrnalize Scoring
scored_df$x14 <- rowSums(scored_df[,1:4])
scored_df$x15 <- rowSums(scored_df[,6:7])
scored_df$x16 <- rowSums(scored_df[,1:8])
# Rename the dataframe
names(scored_df) <- c(names(scoring_list), "Internalizing", "Externalizing", "Total Prob")
# Reorder variables to reduce confusion
scored_df <- select(scored_df,
emotionally_reactive:other_problems,
Internalizing:`Total Prob`,
depressive_problems:opositional_defiant_problems)
# Recreate the final dataset
CBC3_6_2 <- tibble(cbind(Front, Items_Raw, scored_df))
# Save the scored data
write.xlsx(x= CBC3_6_2, file = save.pathway)
# Save the Notes as a CSV
write_csv(x = CBC_3_6_Notes, save.pathway.notes)
# Make a note that the data was saved successfully
cat("Saving processed CBC_3_6\n")
# Remove all global environment objects to declutter
rm(list = ls()[!(ls() %in% c("DataLocation"))])
# Set a pause time for 1 second
Sys.sleep(1)
# This is the main script for importing (most of) and scoring behavioral data saved in KoboToolBox
# Load in package
library(tidyverse)
library(robotoolbox)
library(openxlsx)
library(readxl)
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
#########################                          ############################
######################                                 ########################
###################### REST OF THE SCRIPT IS AUTOMATIC ########################
######################                                 ########################
##########################                        #############################
# Set working directory
setwd(WorkingDirectory)
# Read in CBC file for the older kids
CBC_6_18 <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Adults/ASEBA_CBC_6_18_Raw.xlsx"))
# Load in the demographics info (needed for scoring)
demo <- read_excel(paste0(DataLocation,"FINAL_DS/Demographics/Demographics.xlsx"))
# Create a save pathway
save.pathway <- paste(DataLocation,"FINAL_DS/Behavioral/Adults/CBC_6_18.xlsx", sep="")
# Create a save pathway for Notes
save.pathway.notes <- paste(DataLocation,"REPORTS/Individual/CBC_6_18.csv", sep="")
# Minor data Cleaning
CBC_6_18 <- dplyr::rename(CBC_6_18, Child_ID = Child_s_Study_ID)
# Check the IDs for errors
source("Scoring/scoring_functions/IDError_FUNCTION.R")
CBC_6_18_Notes <-check_id_errors("ASEBA CBC 6-18", CBC_6_18$Child_ID)
# Select Vars of Interest
Front <- CBC_6_18 %>%
select(Child_ID,
Evaluator_ID = Evaluator_s_ID,
Date_of_Evaluation)
Items_Raw <- CBC_6_18 %>%
select(`_1_Ucita_mbuli_mwana_kwiinda_musela_wakwe`:`_113_Mwalombwa_amul_mutwaambo_atala_awa`)
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw2),"_Raw")
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw),"_Raw")
names(Items_Raw)
Items_Raw %>% filter(!complete.cases(.))
Items_Raw %>% filter(!complete.cases(.)) %>% view()
Items_Raw %>% filter(!complete.cases(.)) %>% nrow()
Items_Raw %>% filter(!complete.cases(.)) %>% view()
# Missing data (as of 1/25/25) is 104 rows but that is due to Q63 and Q120
Items_Raw %>% filter(!complete.cases(.))
# Data cleaning: Changing values to correct numbers!
sapply(Items_Raw, function(x) table(x))
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC3_6_57 <- ifelse(Items_Raw$CBC3_6_44 == "0_1", "2", Items_Raw$CBC3_6_44)
Items_Raw$CBC3_6_65 <- ifelse(Items_Raw$CBC3_6_98 == "`1", "1", Items_Raw$CBC3_6_98)
# Select Vars of Interest
Front <- CBC_6_18 %>%
select(Child_ID,
Evaluator_ID = Evaluator_s_ID,
Date_of_Evaluation)
Items_Raw <- CBC_6_18 %>%
select(`_1_Ucita_mbuli_mwana_kwiinda_musela_wakwe`:`_113_Mwalombwa_amul_mutwaambo_atala_awa`)
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw),"_Raw")
# Missing data (as of 1/25/25) is 104 rows but that is due to Q63 and Q120
Items_Raw %>% filter(!complete.cases(.))
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC_6_57 <- ifelse(Items_Raw$CBC_6_57 == "0_1", "2", Items_Raw$CBC3_6_44)
Items_Raw$CBC_6_65 <- ifelse(Items_Raw$CBC_6_65 == "`1", "1", Items_Raw$CBC3_6_98)
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC_6_18_57 <- ifelse(Items_Raw$CBC_6_18_57 == "0_1", "2", Items_Raw$CBC3_6_44)
Items_Raw$CBC_6_18_65 <- ifelse(Items_Raw$CBC_6_18_65 == "`1", "1", Items_Raw$CBC3_6_98)
# Select Vars of Interest
Front <- CBC_6_18 %>%
select(Child_ID,
Evaluator_ID = Evaluator_s_ID,
Date_of_Evaluation)
Items_Raw <- CBC_6_18 %>%
select(`_1_Ucita_mbuli_mwana_kwiinda_musela_wakwe`:`_113_Mwalombwa_amul_mutwaambo_atala_awa`)
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC_6_18_57 <- ifelse(Items_Raw$CBC_6_18_57 == "0_1", "2", Items_Raw$CBC_6_18_57)
Items_Raw$CBC_6_18_65 <- ifelse(Items_Raw$CBC_6_18_65 == "`1", "1", Items_Raw$CBC_6_18_65)
Items_Raw$CBC_6_18_57
# Load in Packages
library(tidyverse)
library(readxl)
library(openxlsx)
# Read in CBC file for the older kids
CBC_6_18 <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Adults/ASEBA_CBC_6_18_Raw.xlsx"))
# Load in the demographics info (needed for scoring)
demo <- read_excel(paste0(DataLocation,"FINAL_DS/Demographics/Demographics.xlsx"))
# Create a save pathway
save.pathway <- paste(DataLocation,"FINAL_DS/Behavioral/Adults/CBC_6_18.xlsx", sep="")
# Create a save pathway for Notes
save.pathway.notes <- paste(DataLocation,"REPORTS/Individual/CBC_6_18.csv", sep="")
###########                                   #############
########### THE REST OF THE CODE IS AUTOMATIC #############
###########                                   #############
# Minor data Cleaning
CBC_6_18 <- dplyr::rename(CBC_6_18, Child_ID = Child_s_Study_ID)
# Check the IDs for errors
source("Scoring/scoring_functions/IDError_FUNCTION.R")
CBC_6_18_Notes <-check_id_errors("ASEBA CBC 6-18", CBC_6_18$Child_ID)
# Select Vars of Interest
Front <- CBC_6_18 %>%
select(Child_ID,
Evaluator_ID = Evaluator_s_ID,
Date_of_Evaluation)
Items_Raw <- CBC_6_18 %>%
select(`_1_Ucita_mbuli_mwana_kwiinda_musela_wakwe`:`_113_Mwalombwa_amul_mutwaambo_atala_awa`)
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw),"_Raw")
Items_Raw$CBC_6_18_57
names(Items_Raw)
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw))
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC_6_18_57 <- ifelse(Items_Raw$CBC_6_18_57 == "0_1", "2", Items_Raw$CBC_6_18_57)
Items_Raw$CBC_6_18_65 <- ifelse(Items_Raw$CBC_6_18_65 == "`1", "1", Items_Raw$CBC_6_18_65)
Items_Raw$CBC_6_18_57
Items_Raw$CBC6_18_57
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC6_18_57 <- ifelse(Items_Raw$CBC6_18_57 == "0_1", "2", Items_Raw$CBC6_18_57)
Items_Raw$CBC6_18_65 <- ifelse(Items_Raw$CBC6_18_65 == "`1", "1", Items_Raw$CBC6_18_65)
sapply(Items_Raw, function(x) table(x))
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC6_18_57 <- ifelse(Items_Raw$CBC6_18_57 == "0_1", "2", Items_Raw$CBC6_18_57)
Items_Raw$CBC6_18_65 <- ifelse(Items_Raw$CBC6_18_65 == "`1", "1", Items_Raw$CBC6_18_65)
Items_Raw$CBC6_18_62 <- ifelse(Items_Raw$CBC6_18_65 == "talimasimpe", "0",
)
Items_Raw$CBC6_18_62 <- ifelse(Items_Raw$CBC6_18_65 == "talimasimpe", "0",
ifelse(Items_Raw$CBC6_18_65 == "zimwi_ziindi", "1", "2"))
sapply(Items_Raw, function(x) table(x))
# Load in Packages
library(tidyverse)
library(readxl)
library(openxlsx)
# Read in CBC file for the older kids
CBC_6_18 <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Adults/ASEBA_CBC_6_18_Raw.xlsx"))
# Load in the demographics info (needed for scoring)
demo <- read_excel(paste0(DataLocation,"FINAL_DS/Demographics/Demographics.xlsx"))
# Create a save pathway
save.pathway <- paste(DataLocation,"FINAL_DS/Behavioral/Adults/CBC_6_18.xlsx", sep="")
# Create a save pathway for Notes
save.pathway.notes <- paste(DataLocation,"REPORTS/Individual/CBC_6_18.csv", sep="")
###########                                   #############
########### THE REST OF THE CODE IS AUTOMATIC #############
###########                                   #############
# Minor data Cleaning
CBC_6_18 <- dplyr::rename(CBC_6_18, Child_ID = Child_s_Study_ID)
# Check the IDs for errors
source("Scoring/scoring_functions/IDError_FUNCTION.R")
CBC_6_18_Notes <-check_id_errors("ASEBA CBC 6-18", CBC_6_18$Child_ID)
# Select Vars of Interest
Front <- CBC_6_18 %>%
select(Child_ID,
Evaluator_ID = Evaluator_s_ID,
Date_of_Evaluation)
Items_Raw <- CBC_6_18 %>%
select(`_1_Ucita_mbuli_mwana_kwiinda_musela_wakwe`:`_113_Mwalombwa_amul_mutwaambo_atala_awa`)
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw))
# Missing data (as of 1/25/25) is 104 rows but that is due to Q63 and Q120
Items_Raw %>% filter(!complete.cases(.))
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC6_18_57 <- ifelse(Items_Raw$CBC6_18_57 == "0_1", "2", Items_Raw$CBC6_18_57)
Items_Raw$CBC6_18_62 <- ifelse(Items_Raw$CBC6_18_62 == "talimasimpe", "0",
ifelse(Items_Raw$CBC6_18_62 == "zimwi_ziindi", "1", "2"))
Items_Raw$CBC6_18_65 <- ifelse(Items_Raw$CBC6_18_65 == "`1", "1", Items_Raw$CBC6_18_65)
sapply(Items_Raw, function(x) table(x))
# Data cleaning: Converting everything into numeric
Items_Raw2 <- sapply(Items_Raw, function(x) as.numeric(x)) %>% cbind() %>% data.frame()
view(Items_Raw2)
view(Items_Raw)
### Internalizing Problems
anx_dep <- c(14, 29, 30, 31, 32, 33, 35, 45, 50, 52, 71, 91, 112)
wit_dep <- c(5, 42, 65, 69, 75, 102, 103, 111)
som_com <- c(47, 49, 51, 54, 56) #Q56 not program correctly- this measure is inaccurate
#### Other (who knows)
soc_pro <- c(11, 12, 25, 27, 34, 36, 38, 48, 62, 64, 79)
tho_pro <- c(9, 18, 40, 46, 58, 59, 60, 66, 70, 76, 83, 84, 85, 92, 100)
att_pro <- c(1, 4, 8, 10, 13, 17, 41, 61, 78, 80)
#### Externalizing Problems
rul_beh <- c(2, 26, 28, 39, 43, 63, 67, 72, 73, 81, 82, 90, 96, 99, 101, 105, 106)
agg_beh <- c(3, 16, 19, 20, 21, 22, 23, 37, 57, 68, 86, 87, 88, 89, 94, 95, 97, 104)
# Other Problems
oth_pro <- c(6, 7, 15, 24, 44, 53, 55, 74, 77, 93, 98, 107, 108, 109, 110, 113)
# Create a list that will be used to score the columns of the dataset
scoring_list <- list(anxious_depressed = anx_dep,
withdrawn_depressed = wit_dep,
somatic_complaints = som_com,
social_problems = soc_pro,
thought_problems = tho_pro,
attention_problems = att_pro,
ruleBreaking_behavior = rul_beh,
aggressive_behavior = agg_beh,
other_problems = oth_pro)
# Create a list that will be used to score the columns of the dataset
scoring_list <- list(anxious_depressed = anx_dep,
withdrawn_depressed = wit_dep,
somatic_complaints = som_com,
social_problems = soc_pro,
thought_problems = tho_pro,
attention_problems = att_pro,
ruleBreaking_behavior = rul_beh,
aggressive_behavior = agg_beh,
other_problems = oth_pro)
scored_list <- list()
for(ii in 1:length(scoring_list)) {
# Save the current scored list as a vector
scored_list[[ii]] <- rowSums(Items_Raw2[,scoring_list[[ii]]], na.rm = T) # Only applies to Q100
}
# Cbind them into a dataset
scored_df <- data.frame(do.call(cbind, scored_list))
view(scored_df)
names(scored_df)
# Add Internal, Externalize and total Scoring
scored_df$X10 <- rowSums(scored_df[,1:3])
scored_df$X11 <- rowSums(scored_df[,7:8])
scored_df$X12 <- rowSums(scored_df[,1:9])
# Rename the dataframe
names(scored_df) <- c(names(scoring_list), "Internalizing", "Externalizing", "Total Prob")
# Recreate the final dataset
CBC6_18_2 <- tibble(cbind(Front, Items_Raw, scored_df))
# This is the main script for importing (most of) and scoring behavioral data saved in KoboToolBox
# Load in package
library(tidyverse)
library(robotoolbox)
library(openxlsx)
library(readxl)
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
#########################                          ############################
######################                                 ########################
###################### REST OF THE SCRIPT IS AUTOMATIC ########################
######################                                 ########################
##########################                        #############################
# Set working directory
setwd(WorkingDirectory)
# Load in Packages
library(tidyverse)
library(readxl)
library(openxlsx)
# Read in CBC file for the older kids
CBC_6_18 <- read_excel(paste0(DataLocation,"RAW_DATA/Behavioral/Adults/ASEBA_CBC_6_18_Raw.xlsx"))
# Create a save pathway
save.pathway <- paste(DataLocation,"FINAL_DS/Behavioral/Adults/CBC_6_18.xlsx", sep="")
# Create a save pathway for Notes
save.pathway.notes <- paste(DataLocation,"REPORTS/Individual/CBC_6_18.csv", sep="")
###########                                   #############
########### THE REST OF THE CODE IS AUTOMATIC #############
###########                                   #############
# Minor data Cleaning
CBC_6_18 <- dplyr::rename(CBC_6_18, Child_ID = Child_s_Study_ID)
# Check the IDs for errors
source("Scoring/scoring_functions/IDError_FUNCTION.R")
CBC_6_18_Notes <-check_id_errors("ASEBA CBC 6-18", CBC_6_18$Child_ID)
# Select Vars of Interest
Front <- CBC_6_18 %>%
select(Child_ID,
Evaluator_ID = Evaluator_s_ID,
Date_of_Evaluation)
Items_Raw <- CBC_6_18 %>%
select(`_1_Ucita_mbuli_mwana_kwiinda_musela_wakwe`:`_113_Mwalombwa_amul_mutwaambo_atala_awa`)
# Rename the Raw Items
names(Items_Raw) <- paste0("CBC6_18_",1:length(Items_Raw))
# Missing data (as of 1/25/25) is 104 rows but that is due to Q63 and Q120
Items_Raw %>% filter(!complete.cases(.))
# Data cleaning: Changing values to correct numbers!
Items_Raw$CBC6_18_57 <- ifelse(Items_Raw$CBC6_18_57 == "0_1", "2", Items_Raw$CBC6_18_57)
Items_Raw$CBC6_18_62 <- ifelse(Items_Raw$CBC6_18_62 == "talimasimpe", "0",
ifelse(Items_Raw$CBC6_18_62 == "zimwi_ziindi", "1", "2"))
Items_Raw$CBC6_18_65 <- ifelse(Items_Raw$CBC6_18_65 == "`1", "1", Items_Raw$CBC6_18_65)
# Data cleaning: Converting everything into numeric
Items_Raw2 <- sapply(Items_Raw, function(x) as.numeric(x)) %>% cbind() %>% data.frame()
###
###### Creating Vectors for Each Problems/Scale
###
### Internalizing Problems
anx_dep <- c(14, 29, 30, 31, 32, 33, 35, 45, 50, 52, 71, 91, 112)
wit_dep <- c(5, 42, 65, 69, 75, 102, 103, 111)
som_com <- c(47, 49, 51, 54, 56) #Q56 not program correctly- this measure is inaccurate
#### Other (who knows)
soc_pro <- c(11, 12, 25, 27, 34, 36, 38, 48, 62, 64, 79)
tho_pro <- c(9, 18, 40, 46, 58, 59, 60, 66, 70, 76, 83, 84, 85, 92, 100)
att_pro <- c(1, 4, 8, 10, 13, 17, 41, 61, 78, 80)
#### Externalizing Problems
rul_beh <- c(2, 26, 28, 39, 43, 63, 67, 72, 73, 81, 82, 90, 96, 99, 101, 105, 106)
agg_beh <- c(3, 16, 19, 20, 21, 22, 23, 37, 57, 68, 86, 87, 88, 89, 94, 95, 97, 104)
# Other Problems
oth_pro <- c(6, 7, 15, 24, 44, 53, 55, 74, 77, 93, 98, 107, 108, 109, 110, 113)
# Create a list that will be used to score the columns of the dataset
scoring_list <- list(anxious_depressed = anx_dep,
withdrawn_depressed = wit_dep,
somatic_complaints = som_com,
social_problems = soc_pro,
thought_problems = tho_pro,
attention_problems = att_pro,
ruleBreaking_behavior = rul_beh,
aggressive_behavior = agg_beh,
other_problems = oth_pro)
###
###### Scoring the data
###
scored_list <- list()
for(ii in 1:length(scoring_list)) {
# Save the current scored list as a vector
scored_list[[ii]] <- rowSums(Items_Raw2[,scoring_list[[ii]]], na.rm = T) # Only applies to Q100
}
# Cbind them into a dataset
scored_df <- data.frame(do.call(cbind, scored_list))
# Add Internal, Externalize and total Scoring
scored_df$X10 <- rowSums(scored_df[,1:3])
scored_df$X11 <- rowSums(scored_df[,7:8])
scored_df$X12 <- rowSums(scored_df[,1:9])
# Rename the dataframe
names(scored_df) <- c(names(scoring_list), "Internalizing", "Externalizing", "Total Prob")
# Recreate the final dataset
CBC6_18_2 <- tibble(cbind(Front, Items_Raw, scored_df))
# Save the scored data
write.xlsx(x= CBC6_18_2, file = save.pathway)
# Save the Notes as a CSV
write_csv(x = CBC_6_18_Notes, save.pathway.notes)
# Make a note that the data was saved successfully
cat("Saving processed CBC_3_6\n")
# Remove all global environment objects to declutter
rm(list = ls()[!(ls() %in% c("DataLocation"))])
# Set a pause time for 1 second
Sys.sleep(1)
# This is the script is to organize the CSV outputs of all the scripts
# Load in Packages
library(tidyverse)
library(readxl)
library(openxlsx)
library(stringr) # str_count()
# Set the pathway for where the CSV Ouputs are located
report.assessment.pathway <- paste0(DataLocation,"REPORTS/Individual/")
# Extract the file names (Children)
all.assessments <- list.files(path=report.assessment.pathway)
# Create a vector for the pathways
all.pathways <- c(rep(report.assessment.pathway, length(all.assessments)))
# Create a dataset from both csv file names and their pathways
data <- data.frame(cbind(all.assessments, all.pathways))
# Create a full pathway
data$full.pathway <- paste(data$all.pathways, "/" ,data$all.assessments, sep ="")
# Read in each file
all.data.list <- list()
for(ii in 1:nrow(data)) {
all.data.list[[ii]] <- read.csv(data$full.pathway[ii])
}
# Bind the read in files into one document
combined.data <- unlist(do.call(c, all.data.list))
# Split the data into two variables
combined.data2 <- data.frame(do.call(rbind, str_split(combined.data, pattern = ":")))
# Rename the combined data2
names(combined.data2) <- c("Dataset", "Errors")
# Create a save pathway
save.pathway.CSV <- paste(DataLocation,"REPORTS/",
"Main_Notes.csv", sep="")
# Save the scored data
write_csv(x= combined.data2, file = save.pathway.CSV)
# Remove all global environment objects to declutter
#rm(list = ls()[!(ls() %in% c("DataLocation", "combined.data2"))])
# Set a pause time for 1 second
Sys.sleep(1)
combined.data2
# This is the main script for importing (most of) and scoring behavioral data saved in KoboToolBox
# Load in package
library(tidyverse)
library(robotoolbox)
library(openxlsx)
library(readxl)
# Set the location for your working directory (Where your scripts are saved)
WorkingDirectory <- "C:/Users/lledesma.TIMES/Documents/GitHub/KBB/"
# Set the location for where your data is saved
DataLocation <- "C:/Users/lledesma.TIMES/Documents/KBB/Data/"
#########################                          ############################
######################                                 ########################
###################### REST OF THE SCRIPT IS AUTOMATIC ########################
######################                                 ########################
##########################                        #############################
# Set working directory
setwd(WorkingDirectory)
# API Token
token <- "947975196832610fca8a1673d54f0530c7cb8275"
# Setting up KoBo
kobo_setup(url = "https://kf.kobotoolbox.org",
token = token)
# Kobo Settings (Quality Control)
kobo_settings()
# Viewing the data
all.data.l <- kobo_asset_list()
# Write the uids for all needed data
df.uid <- data.frame(
ASEBA_YSR.iud = "a6qiRpZCN5Y79dPAXMtb4A",
Atlantis.iud = "aSp3rJjnNFGrEN9TvTJE9Z",
BRIEF2_SF.iud = "aTBTDSaspJjMyx8sWRDzbc",
PatternReas.iud = "aSCbRS4rUwDPLaAGvaHztc",
Triangles_LettrDig.iud = "aKBKpKnKssVquL3yxWqx8G",
ZAT.iud = "aSoQexoZ8NAeBqTAm9sqQt",
ASEBA_CBC_3_6.iud = "aKuaJqgcuCv5GAbmXdAbt6",
ASEBA_CBC_6_18.iud ="aE9p84FiHZTpA5CKv5zc64",
BRIEF2_Parent.iud = "a8crqFHGueNo9WDa6D8kPa",
HomeEnv.iud = "aMsdG3VCzxGbCutgMtkLjq",
PSC.iud = "a4t7cAdJvHnmagPQArZ9yX",
PSQ.iud = "aGdRnPPQeFAV64ha5fxxpP",
VinelandII.iud = "aHP8oarPVKEfGAA3L87QRH",
CFM2_4.iud = "aGvHGCmV9HF9yzsQqCjuJN",
CFM5_17.iud = "a3xZkViikGeNqbuZC7hAzb"
)
# Transpose and rename df.iud
df.uid.t <- data.frame(t(df.uid))
names(df.uid.t) <- "uid"
# Add Child  Parent Assessment Label
df.uid.t$label <- c(rep("Children", 6), rep("Adults", 7), rep("Screener",2))
# Add Partial Pathway
df.uid.t <- df.uid.t %>%
mutate(raw.pathway = case_when(
label == "Children" ~"RAW_DATA/Behavioral/Children/",
label == "Adults" ~ "RAW_DATA/Behavioral/Adults/",
label == "Screener" ~ "RAW_DATA/Screener/"
))
# Import all data into a list
all.data.list <- list()
for(ii in 1:nrow(df.uid.t)) {
# Import the data
all.data.list[[ii]] <- kobo_submissions(df.uid.t$uid[ii])
# Name the list elements
names(all.data.list)[ii] <- gsub(".iud" ,"", row.names(df.uid.t)[ii])
# Check progress
print(paste("Importing ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
# Saving the raw data in their respective raw_data folder
for(ii in 1:length(all.data.list)) {
# Create The Save Pathway
save.pathway = paste(DataLocation,
df.uid.t$raw.pathway[ii],
names(all.data.list),"_Raw.xlsx", sep="")[ii]
# Select the data to save
data <- all.data.list[[ii]]
# Save each data in its raw form
write.xlsx(x= data, file = save.pathway)
# Check progress
print(paste("Saving ",row.names(df.uid.t)[ii]," (",ii,"/",nrow(df.uid.t),")", sep=""))
}
# Wait 2 seconds
Sys.sleep(2)
# Score the data
source("Scoring/CFM2_4.Scoring.R")
source("Scoring/CFM5_17.Scoring.R")
source("Scoring/CFM.Before.Matching.R")
source("Scoring/PatternReasoning.Scoring.R")
source("Scoring/TrianglesAndLetterDigitSpan.Scoring.R")
source("Scoring/ReceptiveVocabulary.Scoring.R")
source("Scoring/PediatricSymptomChecklist.Scoring.R")
source("Scoring/PhysicalData.Scoring.R")
source("Scoring/BRIEF2SelfReport.Scoring.R")
source("Scoring/BRIEF2ParentForm.Scoring.R")
source("Scoring/ASEBA_3_6_Scoring.R")
source("Scoring/ASEBA_CBC_3_6.Scoring.R")
source("Scoring/ASEBA_CBC_6_18.Scoring.R")
source("Scoring/Demographics_Scoring.R")
# Emerged Problems
source("Scoring/ErrorManagement.Scoring.R")
print(combined.data2)
